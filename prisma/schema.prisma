// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User  {
  id                    String                 @id @default(uuid())


  email                  String @unique
  password              String
  role                  UserRole  @default(customer)
  Profile Profile?
 
  createdAt             DateTime               @default(now())
  updatedAt             DateTime               @updatedAt

   
}

model Profile{
 id                    String                 @id @default(uuid())
name Json
profileImg String?
contactNumber String 

dateOfBirth DateTime
Gender  Gender
address Json
bookingList BookingModel[]
reviews ReviewAndRating[]

user   User @relation(fields: [userId], references: [id])
userId String  @unique 





}

model PaintingCategory{

    id String @id @default(uuid())
  title String
  service Service[]
} 
model  Service {

  id String    @id @default(uuid())
  name String
  image String
  description String
  serviceStatus ServiceStatus 
  price Float
  bookingList BookingModel[]
  
  reviews ReviewAndRating[]
  
  category PaintingCategory @relation(fields: [categoryId],references: [id])
  categoryId String 
  createdAt             DateTime               @default(now())
  updatedAt             DateTime               @updatedAt

}

 

model ReviewAndRating{

id String @id @default(uuid())
review String
rating Int

userReveiw Profile @relation( fields: [profileId],references: [id])
profileId String 


serviceReview Service @relation(fields: [serviceId],references: [id])
serviceId String
  
}
model BookingModel{

id String    @id @default(uuid())
 
  
  createdAt             DateTime               @default(now())
  updatedAt             DateTime               @updatedAt


  Bookings      Profile      @relation(fields: [profileId], references: [id])
  profileId    String 
  
  serviceType Service @relation( fields: [serviceId],references: [id])
  serviceId String
  dimention String
  startDate DateTime
   timeSlot String
   colorScheme String?

  location String

  bookingStatus BookingStatus @default(pending)



}
enum UserRole {
  superAdmin
  admin
  customer

}

enum BookingStatus {
pending
shipped
delivered
}
enum ServiceStatus {
  available
   upcoming 
   unavailable
}

enum Gender {
  male 
  female
}
